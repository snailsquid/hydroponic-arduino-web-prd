# Node.js
# node_modules
# This is a common pattern for Node.js projects.
# It will ignore all 'node_modules' directories found anywhere in the project.
node_modules/

# package-lock.json
# This file is generated by npm to lock down dependency versions.
# While some teams commit it, it's often ignored in simpler projects
# to avoid frequent merge conflicts, especially when multiple developers
# might be working on different dependency updates.
package-lock.json

# Yarn
yarn-error.log
.yarn/
.pnp.js
.pnp.cjs

# Log files
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local data file
# This file is generated and updated by your server.
# It's typically not part of the version-controlled source code.
data.json

# Environment variables
# If you were to use environment variables (e.g., for API keys),
# they would often be stored in a .env file, which should be ignored.
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE and Editor files
.vscode/        # VSCode specific settings
.idea/          # IntelliJ IDEA specific settings
*.iml           # IntelliJ IDEA module files
.DS_Store       # macOS specific files
Thumbs.db       # Windows specific files
*.sublime-project
*.sublime-workspace

# Build artifacts (if you ever add a build step)
dist/
build/
out/
# Node.js
# node_modules
# This is a common pattern for Node.js projects.
# It will ignore all 'node_modules' directories found anywhere in the project.
node_modules/

# package-lock.json
# This file is generated by npm to lock down dependency versions.
# While some teams commit it, it's often ignored in simpler projects
# to avoid frequent merge conflicts, especially when multiple developers
# might be working on different dependency updates.
package-lock.json

# Yarn
yarn-error.log
.yarn/
.pnp.js
.pnp.cjs

# Log files
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local data file
# This file is generated and updated by your server.
# It's typically not part of the version-controlled source code.
data.json

# Environment variables
# If you were to use environment variables (e.g., for API keys),
# they would often be stored in a .env file, which should be ignored.
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE and Editor files
.vscode/        # VSCode specific settings
.idea/          # IntelliJ IDEA specific settings
*.iml           # IntelliJ IDEA module files
.DS_Store       # macOS specific files
Thumbs.db       # Windows specific files
*.sublime-project
*.sublime-workspace

# Build artifacts (if you ever add a build step)
dist/
build/
out/
